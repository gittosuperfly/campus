<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cai.campus.server.dao.GroupAccountDao">

    <resultMap type="com.cai.campus.server.entity.GroupAccount" id="GroupAccountMap">
        <result property="groupId" column="group_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="logo" column="logo" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="GroupAccountMap">
        select
          group_id, create_time, name, logo
        from campus.group_account
        where group_id = #{groupId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="GroupAccountMap">
        select
          group_id, create_time, name, logo
        from campus.group_account
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="GroupAccountMap">
        select
          group_id, create_time, name, logo
        from campus.group_account
        <where>
            <if test="groupId != null">
                and group_id = #{groupId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="logo != null and logo != ''">
                and logo = #{logo}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="groupId" useGeneratedKeys="true">
        insert into campus.group_account(create_time, name, logo)
        values (#{createTime}, #{name}, #{logo})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update campus.group_account
        <set>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="logo != null and logo != ''">
                logo = #{logo},
            </if>
        </set>
        where group_id = #{groupId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from campus.group_account where group_id = #{groupId}
    </delete>

</mapper>